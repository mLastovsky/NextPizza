services:
  postgres:
    image: postgres:16.8-alpine3.20
    container_name: postgres
    env_file:
      - .env
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DEFAULT_DB}
      PGDATA: /data/postgres
    volumes:
      - postgres_data:/data/postgres
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U $${POSTGRES_USER} -d $${POSTGRES_DB}" ]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - app-net
    restart: unless-stopped

  mongodb:
    image:
      mongo:6.0
    container_name: mongo
    env_file:
      - .env
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_BASICAUTH_USERNAME: ${MONGO_USER}
      ME_CONFIG_BASICAUTH_PASSWORD: ${MONGO_PASSWORD}
    healthcheck:
      test: ["CMD-SHELL", "mongosh --quiet --username ${MONGO_USER} --password ${MONGO_PASSWORD} --eval 'db.adminCommand(\"ping\").ok' | grep -q 1"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: unless-stopped

  mongo-express:
    image: mongo-express:1.0.2-20-alpine3.19
    container_name: mongo_express
    env_file:
      - .env
    restart: unless-stopped
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongodb
    depends_on:
      mongodb:
        condition: service_healthy

  redis:
    image: redis:7.0.8-alpine
    container_name: redis
    env_file:
      - .env
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    healthcheck:
      test: [ "CMD", "redis-cli", "-a", "$REDIS_PASSWORD", "ping" ]
      interval: 10s
      timeout: 10s
    volumes:
      - redis_data:/data
    networks:
      - app-net
    tty: true
    stdin_open: true
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:
  mongo_data:

networks:
  app-net:
    driver: bridge
